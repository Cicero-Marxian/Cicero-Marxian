--GX hub start

local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/thanhdat4461/OrionMoblie/main/source')))()

local Window = OrionLib:MakeWindow({Name = "GX Hub | F-1.2", HidePremium = false, IntroText = "GX Hub", SaveConfig = true, ConfigFolder = "OrionTest"})

OrionLib:MakeNotification({
	Name = "Hello!",
	Content = "thx for using GX Hub..! ",
	Image = "rbxassetid://7733765398",
	Time = 5
})

local UniversalTab = Window:MakeTab({
	Name = "Universal",
	Icon = "rbxassetid://7733960981",
	PremiumOnly = false
})

local GamesTab = Window:MakeTab({
	Name = "Games",
	Icon = "rbxassetid://7733799901",
	PremiumOnly = false
})

local TrollsTab = Window:MakeTab({
	Name = "Trolls",
	Icon = "rbxassetid://7734059095",
	PremiumOnly = false
})

local OthersTab = Window:MakeTab({
	Name = "Scripts",
	Icon = "rbxassetid://7743871876",
	PremiumOnly = false
})

local GxTab = Window:MakeTab({
	Name = "GX Features",
	Icon = "rbxassetid://7734040369",
	PremiumOnly = false
})

local CreditsTab = Window:MakeTab({
	Name = "About GX",
	Icon = "rbxassetid://7734021680",
	PremiumOnly = false
})

local ChangelogTab = Window:MakeTab({
	Name = "Changelog",
	Icon = "rbxassetid://8997386648",
	PremiumOnly = false
})

--ehh

local Section = UniversalTab:AddSection({
	Name = "Universal's Scripts"
})

local Section = GamesTab:AddSection({
	Name = "Roblox Games "
})

local Section = TrollsTab:AddSection({
	Name = "Trolling "
})

local Section = OthersTab:AddSection({
	Name = "SCRIPTS!"
})

local Section = GxTab:AddSection({
	Name = "GX Scripts"
})

local Section = CreditsTab:AddSection({
	Name = "respect to noqsel"
})

local Section = ChangelogTab:AddSection({
	Name = "Changelogs"
})

--Button

CreditsTab:AddButton({
	Name = "old kavo version  ",
	Callback = function()
loadstring(game:HttpGet(('https://pastefy.app/h7uzfKRe/raw'),true))()
  	end    
})

CreditsTab:AddButton({
	Name = "thx for using gx hub .. :) ",
	Callback = function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/ant-7802/--/main/straightmilk.lua'))()
  	end    
})

CreditsTab:AddButton({
	Name = "support the hub by donating on [zenocicero2] booth in pls donate!",
	Callback = function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/ant-7802/--/main/straightmilk.lua'))()
    end
})

GxTab:AddButton({
	Name = "GX Mobile Opener Button ",
	Callback = function()
-- Instances:
local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local DragFrame = Instance.new("Frame")
local TextButton = Instance.new("TextButton")
local UITextSizeConstraint = Instance.new("UITextSizeConstraint")

-- Properties:
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Black frame background
Frame.BackgroundTransparency = 0.5
Frame.Position = UDim2.new(0, 10, 0, 10) -- Adjusted position
Frame.Size = UDim2.new(0, 100, 0, 30) -- Adjusted size

DragFrame.Parent = Frame
DragFrame.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- Red for visibility
DragFrame.Size = UDim2.new(1, 0, 0, 30) -- Visible square above the frame

TextButton.Parent = Frame
TextButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Black button background
TextButton.BackgroundTransparency = 0
TextButton.Size = UDim2.new(1, 0, 1, 0)
TextButton.Font = Enum.Font.SourceSans
TextButton.Text = "GX"
TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton.TextScaled = true
TextButton.TextSize = 15.000
TextButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
TextButton.TextStrokeTransparency = 0.000
TextButton.TextWrapped = true

local closeButton = Instance.new("TextButton")
closeButton.Parent = TextButton
closeButton.BackgroundTransparency = 1
closeButton.Size = UDim2.new(0.3, 0, 0.3, 0)
closeButton.Position = UDim2.new(0.7, 0, 0.1, 0)
closeButton.Font = Enum.Font.SourceSans
closeButton.Text = "X"
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.TextScaled = true
closeButton.TextSize = 16.000
closeButton.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
closeButton.TextStrokeTransparency = 0.000
closeButton.TextWrapped = true
closeButton.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
end)

TextButton.MouseButton1Click:Connect(function()
    game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.RightShift, false, game)
end)

UITextSizeConstraint.Parent = TextButton
UITextSizeConstraint.MaxTextSize = 15
  	end    
})

GxTab:AddButton({
	Name = "GX Speed Adjuster",
	Callback = function()
-- Speed Adjuster Script
local player = game.Players.LocalPlayer
local mouse = player:GetMouse()

-- Create GUI
local speedGui = Instance.new("ScreenGui")
speedGui.Name = "Speed Adjuster"
speedGui.Parent = game.CoreGui

-- Main Tab
local mainTab = Instance.new("Frame")
mainTab.Size = UDim2.new(0, 200, 0, 150)
mainTab.Position = UDim2.new(0, 10, 0, 10)
mainTab.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
mainTab.BorderSizePixel = 2
mainTab.Parent = speedGui

-- Make GUI Dragable
local dragging
local dragInput
local dragStart
local startPos

mainTab.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = mainTab.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

mainTab.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

mouse.Move:Connect(function()
    if dragging then
        local delta = dragInput.Position - dragStart
        mainTab.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

-- Speed Adjuster
local speedValue = 16 -- Default speed

local speedSlider = Instance.new("TextLabel")
speedSlider.Size = UDim2.new(0, 200, 0, 30)
speedSlider.Position = UDim2.new(0, 0, 0, 0)
speedSlider.Text = "Speed: " .. speedValue
speedSlider.TextColor3 = Color3.new(1, 1, 1)
speedSlider.BackgroundTransparency = 1
speedSlider.Parent = mainTab

local speedInput = Instance.new("TextBox")
speedInput.Size = UDim2.new(0, 50, 0, 20)
speedInput.Position = UDim2.new(0, 10, 0, 40)
speedInput.Text = tostring(speedValue)
speedInput.TextColor3 = Color3.new(1, 1, 1)
speedInput.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)
speedInput.Parent = mainTab

local applyButton = Instance.new("TextButton")
applyButton.Size = UDim2.new(0, 80, 0, 30)
applyButton.Position = UDim2.new(0, 10, 0, 70)
applyButton.Text = "Apply"
applyButton.TextColor3 = Color3.new(1, 1, 1)
applyButton.BackgroundColor3 = Color3.new(0.4, 0.4, 0.4)
applyButton.Parent = mainTab

applyButton.MouseButton1Click:Connect(function()
    speedValue = tonumber(speedInput.Text) or speedValue
    speedSlider.Text = "Speed: " .. speedValue
    -- Adjust player speed using the speedValue
    player.Character.Humanoid.WalkSpeed = speedValue
end)

-- Close Button
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 20, 0, 20)
closeButton.Position = UDim2.new(1, -20, 0, 0)
closeButton.Text = "X"
closeButton.TextColor3 = Color3.new(1, 0, 0)
closeButton.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
closeButton.Parent = mainTab

closeButton.MouseButton1Click:Connect(function()
    speedGui:Destroy()
end)

-- Additional Text
local additionalText = Instance.new("TextLabel")
additionalText.Size = UDim2.new(0, 200, 0, 20)
additionalText.Position = UDim2.new(0, 0, 0, 120)
additionalText.Text = "GXTEAM"
additionalText.TextColor3 = Color3.new(1, 1, 1)
additionalText.BackgroundTransparency = 1
additionalText.Parent = mainTab
  	end    
})

GxTab:AddButton({
	Name = "GX Jump Adjuster",
	Callback = function()
-- Jump Adjuster Script
local player = game.Players.LocalPlayer
local mouse = player:GetMouse()

-- Create GUI
local jumpGui = Instance.new("ScreenGui")
jumpGui.Name = "Jump Adjuster"
jumpGui.Parent = game.CoreGui

-- Main Tab
local mainTab = Instance.new("Frame")
mainTab.Size = UDim2.new(0, 200, 0, 150)
mainTab.Position = UDim2.new(1, -210, 0, 10)  -- Updated X position
mainTab.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
mainTab.BorderSizePixel = 2
mainTab.Parent = jumpGui

-- Make GUI Dragable
local dragging
local dragInput
local dragStart
local startPos

mainTab.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = mainTab.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

mainTab.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

mouse.Move:Connect(function()
    if dragging then
        local delta = dragInput.Position - dragStart
        mainTab.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

-- Jump Adjuster
local jumpPowerValue = 50  -- Default jump power

local jumpSlider = Instance.new("TextLabel")
jumpSlider.Size = UDim2.new(0, 200, 0, 30)
jumpSlider.Position = UDim2.new(0, 0, 0, 0)
jumpSlider.Text = "Jump Power: " .. jumpPowerValue
jumpSlider.TextColor3 = Color3.new(1, 1, 1)
jumpSlider.BackgroundTransparency = 1
jumpSlider.Parent = mainTab

local jumpInput = Instance.new("TextBox")
jumpInput.Size = UDim2.new(0, 50, 0, 20)
jumpInput.Position = UDim2.new(0, 10, 0, 40)
jumpInput.Text = tostring(jumpPowerValue)
jumpInput.TextColor3 = Color3.new(1, 1, 1)
jumpInput.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)
jumpInput.Parent = mainTab

local applyButton = Instance.new("TextButton")
applyButton.Size = UDim2.new(0, 80, 0, 30)
applyButton.Position = UDim2.new(0, 10, 0, 70)
applyButton.Text = "Apply"
applyButton.TextColor3 = Color3.new(1, 1, 1)
applyButton.BackgroundColor3 = Color3.new(0.4, 0.4, 0.4)
applyButton.Parent = mainTab

applyButton.MouseButton1Click:Connect(function()
    jumpPowerValue = tonumber(jumpInput.Text) or jumpPowerValue
    jumpSlider.Text = "Jump Power: " .. jumpPowerValue

    -- Adjust player jump power using Humanoid property
    local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid.JumpPower = jumpPowerValue
    end
end)

-- Close Button
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 20, 0, 20)
closeButton.Position = UDim2.new(1, -20, 0, 0)
closeButton.Text = "X"
closeButton.TextColor3 = Color3.new(1, 0, 0)
closeButton.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
closeButton.Parent = mainTab

closeButton.MouseButton1Click:Connect(function()
    jumpGui:Destroy()
end)

-- Additional Text
local additionalText = Instance.new("TextLabel")
additionalText.Size = UDim2.new(0, 200, 0, 20)
additionalText.Position = UDim2.new(0, 0, 0, 120)
additionalText.Text = "GXTEAM"
additionalText.TextColor3 = Color3.new(1, 1, 1)
additionalText.BackgroundTransparency = 1
additionalText.Parent = mainTab
  	end    
})

GxTab:AddButton({
	Name = "Destroy GX",
	Callback = function()
OrionLib:Destroy()
  	end    
})

UniversalTab:AddButton({
	Name = "Infinite Yield",
	Callback = function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
  	end    
})

UniversalTab:AddButton({
	Name = "Fly Gui V3",
	Callback = function()
loadstring(game:HttpGet('https://pastebin.com/raw/YSL3xKYU'))()
  	end    
})

UniversalTab:AddButton({
	Name = "Fly GUI V3 (Secured)",
	Callback = function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/Pro69Yes/sussy-Script/main/SecuredFlyGuiv3.lua'))()
  	end    
})

UniversalTab:AddButton({
	Name = "VFly Gui",
	Callback = function()
loadstring(game:HttpGet("https://pastebin.com/raw/MHE1cbWF"))()
  	end    
})

UniversalTab:AddButton({
	Name = "FE Animation R15",
	Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/GamingScripter/Animation-Hub/main/Animation%20Gui", true))()
  	end    
})

UniversalTab:AddButton({
	Name = "FE Emotes R15",
	Callback = function()
loadstring(game:HttpGet("https://pastebin.com/raw/eCpipCTH"))()
  	end    
})

TrollsTab:AddButton({
	Name = "InvisMobile R15/R6",
	Callback = function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/LiverMods/raw/main/Invisible'))()
  	end    
})

UniversalTab:AddButton({
	Name = "Item Tools",
	Callback = function()
loadstring(game:HttpGet(('https://pastefy.app/VYIAk3o1/raw'),true))()
  	end    
})

UniversalTab:AddButton({
	Name = "Permanent TPTOOL",
	Callback = function()
loadstring(game:HttpGet("https://pastefy.app/IpjIW7ZH/raw"))()
  	end    
})

UniversalTab:AddButton({
	Name = "SimpleCMDS",
	Callback = function()
loadstring(game:HttpGet('https://pastebin.com/raw/3hDQcTaD'))()
  	end    
})

UniversalTab:AddButton({
	Name = "Anti Fling",
	Callback = function()
loadstring(game:HttpGet(('https://pastebin.com/raw/GxdesRQx'),true))()
  	end    
})

UniversalTab:AddButton({
	Name = "FPS BOOST",
	Callback = function()
loadstring(game:HttpGet(('https://pastebin.com/raw/rNawQPNh'),true))()
  	end    
})

GamesTab:AddButton({
	Name = "Shympony Hub",
	Callback = function()
local a,b,c,d=loadstring,request or http_request or (http and http.request) or (syn and syn.request),assert,"https://itsjidy.github.io/SymphonyHub/Loader.html"c(a and b, "Your Executor does not support.")a(b({Url=d,Method="GET"}).Body)()
  	end    
})

GamesTab:AddButton({
	Name = "Ice Hub",
	Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/IceMael7/NewIceHub/main/Brookhaven"))()
  	end    
})

GamesTab:AddButton({
	Name = "Funky Friday AutoPlayer",
	Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/ShowerHead-FluxTeam/scripts/main/funky-friday-autoplay"))()
  	end    
})

GamesTab:AddButton({
	Name = "FFAP Gui Remover (Mobile)",
	Callback = function()
getgenv().keytoclick = "Delete"
tool = Instance.new("Tool")
tool.RequiresHandle = false
tool.Name = keytoclick
tool.Activated:connect(function()
    local vim = game:service("VirtualInputManager")
vim:SendKeyEvent(true, keytoclick, false, game)
end)
tool.Parent = game.Players.LocalPlayer.Backpack
wait(0.2)
local AkaliNotif = loadstring(game:HttpGet("https://raw.githubusercontent.com/Kinlei/Dynissimo/main/Scripts/AkaliNotif.lua"))();
local Notify = AkaliNotif.Notify;
Notify({
Description = "credits to matt";
Title = "FF Autoplay Remover";
Duration = 10;
});
  	end    
})

GamesTab:AddButton({
	Name = "Funky Friday AP FIXED MOBILE/PC",
	Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/Nadir3709/RandomScript/main/FunkyFridayMobile"))()
  	end    
})

GamesTab:AddButton({
	Name = "Funky Friday AutoPlayer V2 [buggy]",
	Callback = function()
print("Credits to mstudio45 for the ported UI lib of Linoria")
print("Credits to Wally-RBLX and his devs for making this amazing script")
print("I DO NOT OWN ANY OF THIS CODE. CREDITS TO THIS CODE AND UI LIBS ETC GO TO THEIR OWNERS.")
print(" ")
print("Wally RBLX's Funky Friday AutoPlay script mobile port. (READ LINES ABOVE!)")

local start = tick()
local client = game:GetService('Players').LocalPlayer;
local set_identity = (type(syn) == 'table' and syn.set_thread_identity) or setidentity or setthreadcontext
local executor = identifyexecutor and identifyexecutor() or 'Unknown'

local function fail(r) return client:Kick(r) end

-- gracefully handle errors when loading external scripts
-- added a cache to make hot reloading a bit faster
local usedCache = shared.__urlcache and next(shared.__urlcache) ~= nil

shared.__urlcache = shared.__urlcache or {}
local function urlLoad(url)
    local success, result

    if shared.__urlcache[url] then
        success, result = true, shared.__urlcache[url]
    else
        success, result = pcall(game.HttpGet, game, url)
    end

    if (not success) then
        return fail(string.format('Failed to GET url %q for reason: %q', url, tostring(result)))
    end

    local fn, err = loadstring(result)
    if (type(fn) ~= 'function') then
        return fail(string.format('Failed to loadstring url %q for reason: %q', url, tostring(err)))
    end

    local results = { pcall(fn) }
    if (not results[1]) then
        return fail(string.format('Failed to initialize url %q for reason: %q', url, tostring(results[2])))
    end

    shared.__urlcache[url] = result
    return unpack(results, 2)
end

-- attempt to block imcompatible exploits
-- rewrote because old checks literally did not work
if type(set_identity) ~= 'function' then return fail('Unsupported exploit (missing "set_thread_identity")') end
if type(getconnections) ~= 'function' then return fail('Unsupported exploit (missing "getconnections")') end
if type(getloadedmodules) ~= 'function' then return fail('Unsupported exploit (misssing "getloadedmodules")') end
if type(getgc) ~= 'function' then   return fail('Unsupported exploit (misssing "getgc")') end

local getinfo = debug.getinfo or getinfo;
local getupvalue = debug.getupvalue or getupvalue;
local getupvalues = debug.getupvalues or getupvalues;
local setupvalue = debug.setupvalue or setupvalue;

if type(setupvalue) ~= 'function' then return fail('Unsupported exploit (misssing "debug.setupvalue")') end
if type(getupvalue) ~= 'function' then return fail('Unsupported exploit (misssing "debug.getupvalue")') end
if type(getupvalues) ~= 'function' then return fail('Unsupported exploit (missing "debug.getupvalues")') end

-- free exploit bandaid fix
if type(getinfo) ~= 'function' then
    local debug_info = debug.info;
    if type(debug_info) ~= 'function' then
        -- if your exploit doesnt have getrenv you have no hope
        if type(getrenv) ~= 'function' then return fail('Unsupported exploit (missing "getrenv")') end
        debug_info = getrenv().debug.info
    end
    getinfo = function(f)
        assert(type(f) == 'function', string.format('Invalid argument #1 to debug.getinfo (expected %s got %s', 'function', type(f)))
        local results = { debug.info(f, 'slnfa') }
        local _, upvalues = pcall(getupvalues, f)
        if type(upvalues) ~= 'table' then
            upvalues = {}
        end
        local nups = 0
        for k in next, upvalues do
            nups = nups + 1
        end
        -- winning code
        return {
            source      = '@' .. results[1],
            short_src   = results[1],
            what        = results[1] == '[C]' and 'C' or 'Lua',
            currentline = results[2],
            name        = results[3],
            func        = results[4],
            numparams   = results[5],
            is_vararg   = results[6], -- 'a' argument returns 2 values :)
            nups        = nups,     
        }
    end
end

local IsMobile = false;
local DevicePlatform = Enum.Platform.None;
pcall(function() DevicePlatform = UserInputService:GetPlatform(); end);
IsMobile = (DevicePlatform == Enum.Platform.Android or DevicePlatform == Enum.Platform.IOS);
local UIRepo = 'https://raw.githubusercontent.com/Bart3kk/LinLib/main/'
local ScriptRepo = 'https://raw.githubusercontent.com/Bart3kk/funky-friday-autoplay/main/'

local UI = nil
if IsMobile then
    UI = loadstring(game:HttpGet(UIRepo .. 'TestMobileSupport.lua'))()
else
    UI = loadstring(game:HttpGet(UIRepo .. 'Library.lua'))()
end

local metadata = loadstring(game:HttpGet(ScriptRepo .. 'metadata.lua'))()
local httpService = game:GetService('HttpService')

local framework, scrollHandler, network
local counter = 0

while true do
    for _, obj in next, getgc(true) do
        if type(obj) == 'table' then 
            if rawget(obj, 'GameUI') then
                framework = obj;
    
